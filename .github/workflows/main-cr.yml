name: Trigger CR Stages

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      create_cr:
        description: "Yes or No"
        required: true
        default: "yes"
      site:
        description: "Site"
        required: true
        default: "cloud-svldev-1"
      subnet_info:
        description: "Subnet Info"
      user_data:
        description: "Enter variables like name=John,age=20,place=LA"
        required: true
        default: "name=John,age=20,place=LA"
  workflow_call:

jobs:
  parse-input:
    runs-on: ubuntu-latest
    steps:
      - name: Parse key=value pairs
        run: |
          input="${{ github.event.inputs.user_data }}"

          # Split by comma
          IFS=',' read -ra pairs <<< "$input"
          for pair in "${pairs[@]}"; do
            key="${pair%%=*}"
            value="${pair#*=}"
            echo "$key=$value"
            echo "$key=$value" >> $GITHUB_ENV
          done

      - name: Use parsed variables
        run: |
          echo "User's name is $name, age is $age, and lives in $place."

#   create-cr:
#     if: ${{ github.event.inputs.create_cr == 'yes' && github.event.inputs.subnet_info != '' }}
#     uses: Avee07/github-reusable-workflows/.github/workflows/mock-change-request.yml@main
#     with:
#       site: ${{ github.event.inputs.site }}
#       subnet_info: ${{ github.event.inputs.subnet_info }}
#       state: create
#     secrets:
#       token: ${{ secrets.GITHUB_TOKEN }}

#   implement-cr:
#     if: ${{github.event.inputs.create_cr == 'yes'}}
#     needs: create-cr
#     uses: Avee07/github-reusable-workflows/.github/workflows/mock-change-request.yml@main
#     with:
#       state: implement
#       site: ${{ github.event.inputs.site }}
#     secrets:
#       token: ${{ secrets.GITHUB_TOKEN }}

#   close-cr:
#     if: ${{ github.event.inputs.create_cr == 'yes' }}
#     needs: [create-cr, implement-cr]
#     uses: Avee07/github-reusable-workflows/.github/workflows/mock-change-request.yml@main
#     with:
#       state: close
#       site: ${{ github.event.inputs.site }}
#       close_code: close_successful
#     secrets:

#       token: ${{ secrets.GITHUB_TOKEN }}
